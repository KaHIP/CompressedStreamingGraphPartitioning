# automatically generated by the FlatBuffers compiler, do not modify

# namespace: StreamCPIInfo

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MemoryConsumption(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MemoryConsumption()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMemoryConsumption(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MemoryConsumption
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MemoryConsumption
    def UncompressedVecBytes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # MemoryConsumption
    def RleVectorBytes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # MemoryConsumption
    def RleVectorMb(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # MemoryConsumption
    def RelativeCompression(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # MemoryConsumption
    def OverallMaxRss(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def MemoryConsumptionStart(builder):
    builder.StartObject(5)

def Start(builder):
    MemoryConsumptionStart(builder)

def MemoryConsumptionAddUncompressedVecBytes(builder, uncompressedVecBytes):
    builder.PrependUint64Slot(0, uncompressedVecBytes, 0)

def AddUncompressedVecBytes(builder, uncompressedVecBytes):
    MemoryConsumptionAddUncompressedVecBytes(builder, uncompressedVecBytes)

def MemoryConsumptionAddRleVectorBytes(builder, rleVectorBytes):
    builder.PrependUint64Slot(1, rleVectorBytes, 0)

def AddRleVectorBytes(builder, rleVectorBytes):
    MemoryConsumptionAddRleVectorBytes(builder, rleVectorBytes)

def MemoryConsumptionAddRleVectorMb(builder, rleVectorMb):
    builder.PrependFloat64Slot(2, rleVectorMb, 0.0)

def AddRleVectorMb(builder, rleVectorMb):
    MemoryConsumptionAddRleVectorMb(builder, rleVectorMb)

def MemoryConsumptionAddRelativeCompression(builder, relativeCompression):
    builder.PrependFloat64Slot(3, relativeCompression, 0.0)

def AddRelativeCompression(builder, relativeCompression):
    MemoryConsumptionAddRelativeCompression(builder, relativeCompression)

def MemoryConsumptionAddOverallMaxRss(builder, overallMaxRss):
    builder.PrependInt64Slot(4, overallMaxRss, 0)

def AddOverallMaxRss(builder, overallMaxRss):
    MemoryConsumptionAddOverallMaxRss(builder, overallMaxRss)

def MemoryConsumptionEnd(builder):
    return builder.EndObject()

def End(builder):
    return MemoryConsumptionEnd(builder)
